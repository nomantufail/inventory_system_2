<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');include_once(APPPATH."controllers/parentController.php");class Agents extends ParentController {    //public variables...    public function __construct()    {        parent::__construct();    }    /* The default function that gets called when visiting the page */    public function index($type='suppliers')    {        if($this->login == true){            $agent_id = (isset($_GET['agent']))?$_GET['agent']:'';            $keys = array(                'agent_id'=>$agent_id,                'type'=>$type,            );            //defining the sorting column            $sort = array(                'sort_by'=>(isset($_GET['sort_by']))?$_GET['sort_by']:'inserted_at',                'order' => (isset($_GET['order']))?$_GET['order']:'asc',            );            ///////////////////////////////////////////////////////////////            //counting total agents            $num_agents = $this->agents_model->count($keys);            $num_agents = ($num_agents == 0)?1:$num_agents;            $config = $this->helper_model->pagination_configs("agents/index/?", "agents", $num_agents);            $this->pagination->initialize($config);            $pageNumber = 0;            if(isset($_GET['page'])){                $pageNumber = $_GET['page'];                if($pageNumber>=0){$pageNumber = $pageNumber;}else{ $pageNumber = 0;}            }            $headerData = array(                'title' => 'Agents',                'page' => 'agents',            );            $bodyData['someMessage'] = '';            $bodyData['pages'] = $this->pagination->create_links();            $bodyData['columns'] = array();            //deleting the customer*****************//            if(isset($_POST['del'])){                $this->form_validation->set_rules('del', 'Agent', 'required|numeric|callback__validate_customer_deleting');                if ($this->form_validation->run() == true)                {                    if( $this->helper_model->delete_record('agents',$_POST['del']) == true){                        $bodyData['someMessage'] = array('message'=>'Agent Deleted Successfully!', 'type'=>'alert-success');                    }else{                        $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                    }                }            }            //////////////////////////////////////////////////////////            if(isset($_POST['addAgent'])){                if($this->form_validation->run('add_agent') == true){                    if( $this->agents_model->insert() == true){                        $bodyData['someMessage'] = array('message'=>'Agent Added Successfully!', 'type'=>'alert-success');                    }else{                        $bodyData['someMessage'] = array('message'=>'Some Unknown database fault happened. please try again a few moments later. Or you can contact your system provider.<br>Thank You', 'type'=>'alert-warning');                    }                }            }            $bodyData['agents'] = $this->agents_model->get_limited($config["per_page"], $pageNumber, $keys, $sort);            if(isset($_GET['print'])){                if(isset($_POST['check'])){                    $bodyData['agents'] = $this->helper_model->filter_records($bodyData['agents'], $_POST['check'],"id");                }                if(isset($_POST['column'])){                    $bodyData['columns'] = $_POST['column'];                }                $this->load->view('agents/components/print_agents', $bodyData);            }else{                $this->load->view('components/header', $headerData);                //var_dump($bodyData['agents']);                $this->load->view('agents/welcome', $bodyData);                $this->load->view('components/footer');            }        }else{            $this->load->view('admin/login');        }    }    public function profile($c_id = '', $req ='' )    {        if($c_id == ''){            $this->index();        }else{            $headerData = array(                'title' => 'Petroleum | Customers | Profile',                'page' => 'agents',            );            $bodyData = array('profile' => $this->customers_model->customer($c_id),);            $bodyData['agents'] = $this->customers_model->customers();            $footerData = array(                'link'=>'?customer_id='.$c_id,            );            $this->load->view('components/header', $headerData);    //HEADER DATA            //check if we some data received of not against the request?            if($bodyData['profile'] != ''){                $this->load->view('agents/profile', $bodyData);            }else{                $this->load->view('components/recordNotFound');            }            $this->load->view('components/footer', $footerData);     //footer data        }    }    public function _check_unique_agent($agent)    {        $name = $this->input->post('name');        $type = $this->input->post('type');        $this->db->select("id");        $this->db->where(array(            'name'=>$name,            'type'=>$type,        ));        $num = $this->db->get('agents')->num_rows();        if($num > 0)        {            $this->form_validation->set_message('_check_unique_agent','Agent already exist. Please try again');            return false;        }        return true;    }}/* End of file welcome.php *//* Location: ./application/controllers/welcome.php */